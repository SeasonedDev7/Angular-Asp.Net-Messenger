<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Presentation.Api</name>
    </assembly>
    <members>
        <member name="M:Presentation.Api.Controllers.LanguageController.GetAllLanguages(System.Threading.CancellationToken)">
             <summary>
             Gets a list of all available languages
             </summary>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             A list of available languages
             </returns>
            
             <response code="200">
             Contains a list of available languages
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.LanguageController.GetTranslationsByLanguage(System.Int32,Core.Domain.Dtos.Languages.GetTranslationsByLanguageDto,System.Threading.CancellationToken)">
             <summary>
             Gets a list of translations for a specific language
             </summary>
             
             <param name="languageId">
             ID of the language to get translations from
             </param>
             
             <param name="model">
             Specifies a pattern filter that can be applied to the translation key
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             A list of translations in the given language that satisfy the pattern filter
             </returns>
            
             <response code="200">
             Contains a list of translations for given language
             </response>
            
             <response code="400">
             Language ID and/or pattern filter are invalid
             </response>
            
             <response code="404">
             Language with given ID does not exist
             </response>
            
             <response code="500">
             An unexpected error occurred
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.SessionController.Login(Core.Domain.Dtos.Session.LoginUserDto,System.Threading.CancellationToken)">
            <summary>
            Validates login credentials and returns the users information with a new access token
            </summary>
            
            <param name="credentials">
            User credentials to be validated
            </param>
            
            <param name="cancellationToken">
            Notifies asynchronous operations to cancel ongoing work and release resources
            </param>
            
            <returns>
            User information alongside new access token
            </returns>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.RegisterUser(Core.Domain.Dtos.Users.RegisterUserDto,System.Threading.CancellationToken)">
             <summary>
             Creates a new user account based on given user information
             </summary>
             
             <param name="credentials">
             Specifies the user credentials to be used for the new user account
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             Location of where to fetch the created user data ('Location' header)
             </returns>
            
             <response code="201">
             Contains the location of where to fetch the created user data inside the 'Location' header
             </response>
            
             <response code="400">
             Provided user credentials are in an invalid format or a user with provided credentials already exists
             </response>
            
             <response code="500">
             An unexpected error occurred on the server
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.GetUserProfile(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns a users profile information
            </summary>
            
            <param name="userId">
            ID of the user to search by
            </param>
            
            <param name="cancellationToken">
            Notifies asynchronous operations to cancel ongoing work and release resources
            </param>
            
            <returns>
            User profile information
            </returns>
            
            <response code="200">
            Contains user profile information
            </response>
            
            <response code="400">
            The provided user ID is in an invalid format
            </response>
            
            <response code="404">
            The user with the given ID could not be found
            </response>
            
            <response code="500">
            An unexpected error occurred on the server
            </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.EmailExists(Core.Domain.Dtos.Users.EmailExistsDto,System.Threading.CancellationToken)">
             <summary>
             Checks whether a given email exists in the database
             </summary>
             
             <param name="model">
             Specifies the email address to query by
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content, since HEAD requests carry no response body
             </returns>
            
             <response code="200">
             Given email address exists in the database
             </response>
            
             <response code="400">
             Given email address is in an invalid format
             </response>
            
             <response code="404">
             Given email address does not exist in the database
             </response>
            
             <response code="500">
             An unexpected error occurred on the server
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.UserNameExists(Core.Domain.Dtos.Users.UserNameExistsDto,System.Threading.CancellationToken)">
             <summary>
             Checks whether a given user name exists in the database
             </summary>
             
             <param name="model">
             Specifies the user name to query by
             </param>
             
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             No content, since HEAD requests carry no response body
             </returns>
            
             <response code="200">
             Given user name exists in the database
             </response>
            
             <response code="400">
             Given user name is in an invalid format
             </response>
            
             <response code="404">
             Given user name does not exist in the database
             </response>
            
             <response code="500">
             An unexpected error occurred on the server
             </response>
        </member>
        <member name="M:Presentation.Api.Controllers.UserController.Authenticate(System.Threading.CancellationToken)">
             <summary>
             Authenticates the current user, given a access token inside the Authorization request header
             </summary>
            
             <param name="cancellationToken">
             Notifies asynchronous operations to cancel ongoing work and release resources
             </param>
             
             <returns>
             User information alongside access token
             </returns>
            
             <response code="200">
             Contains authenticated user alongside access token
             </response>
            
             <response code="400">
             Access token in authorization header is invalid or expired
             </response>
            
             <response code="500">
             An unexpected error occured on the server
             </response>
        </member>
    </members>
</doc>
